#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_0000015c8557cd10 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000015c8558ebb0 .scope module, "tb" "tb" 3 2;
 .timescale 0 0;
v0000015c855f7650_0 .var "calc_seq", 15 0;
v0000015c855f7510_0 .var "clk", 0 0;
v0000015c855f6e30_0 .net "data", 15 0, L_0000015c8558f7c0;  1 drivers
v0000015c855f6b10_0 .var "en", 0 0;
v0000015c855f6930_0 .var "len", 3 0;
v0000015c855f6a70_0 .var "load", 0 0;
v0000015c855f6c50_0 .var "new_bit", 0 0;
v0000015c855f7330_0 .var "poly", 16 0;
v0000015c855f7010_0 .var "seed", 15 0;
v0000015c855f73d0_0 .var "shift", 3 0;
S_0000015c8558ed40 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 22, 3 22 0, S_0000015c8558ebb0;
 .timescale 0 0;
v0000015c856dbac0_0 .var/2s "j", 31 0;
S_0000015c856d6550 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 3 33, 3 33 0, S_0000015c8558ed40;
 .timescale 0 0;
v0000015c8557d140_0 .var/2s "i", 31 0;
E_0000015c85579090 .event posedge, v0000015c855f6660_0;
S_0000015c856d66e0 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 3 53, 3 53 0, S_0000015c8558ebb0;
 .timescale 0 0;
v0000015c856d6b20_0 .var/2s "j", 31 0;
S_0000015c856d6870 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 3 55, 3 55 0, S_0000015c856d66e0;
 .timescale 0 0;
v0000015c856d6db0_0 .var/2s "i", 31 0;
S_0000015c855f6020 .scope module, "UUT" "LFSR_Fibonacci" 3 73, 4 2 0, S_0000015c8558ebb0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "CLK_I";
    .port_info 1 /INPUT 1 "EN_I";
    .port_info 2 /INPUT 1 "LOAD_I";
    .port_info 3 /INPUT 16 "SEED_I";
    .port_info 4 /INPUT 4 "SHIFT_I";
    .port_info 5 /INPUT 17 "POLY_I";
    .port_info 6 /INPUT 4 "LEN_I";
    .port_info 7 /OUTPUT 16 "DATA_O";
P_0000015c855790d0 .param/l "MAX_LEN" 0 4 3, +C4<00000000000000000000000000010000>;
L_0000015c8558f7c0 .functor BUFZ 16, v0000015c855f76f0_0, C4<0000000000000000>, C4<0000000000000000>, C4<0000000000000000>;
v0000015c855f6660_0 .net "CLK_I", 0 0, v0000015c855f7510_0;  1 drivers
v0000015c855f6700_0 .net "DATA_O", 15 0, L_0000015c8558f7c0;  alias, 1 drivers
v0000015c855f67a0_0 .net "EN_I", 0 0, v0000015c855f6b10_0;  1 drivers
v0000015c855f6840_0 .net "LEN_I", 3 0, v0000015c855f6930_0;  1 drivers
v0000015c855f7150_0 .net "LOAD_I", 0 0, v0000015c855f6a70_0;  1 drivers
v0000015c855f71f0_0 .net "POLY_I", 16 0, v0000015c855f7330_0;  1 drivers
v0000015c855f6f70_0 .net "SEED_I", 15 0, v0000015c855f7010_0;  1 drivers
v0000015c855f7290_0 .net "SHIFT_I", 3 0, v0000015c855f73d0_0;  1 drivers
v0000015c855f6bb0_0 .var "len_reg", 3 0;
v0000015c855f76f0_0 .var "lfsr_reg", 15 0;
v0000015c855f7790_0 .var "nodes", 16 0;
v0000015c855f70b0_0 .var "poly_reg", 15 0;
v0000015c855f75b0_0 .var "shift_reg", 3 0;
E_0000015c85579150/0 .event anyedge, v0000015c855f7150_0, v0000015c855f6f70_0, v0000015c855f76f0_0, v0000015c855f67a0_0;
E_0000015c85579150/1 .event anyedge, v0000015c855f75b0_0, v0000015c855f70b0_0, v0000015c855f7790_0, v0000015c855f6bb0_0;
E_0000015c85579150 .event/or E_0000015c85579150/0, E_0000015c85579150/1;
S_0000015c855f61b0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 4 57, 4 57 0, S_0000015c855f6020;
 .timescale 0 0;
v0000015c856dbdd0_0 .var/2s "i", 31 0;
S_0000015c855f6340 .scope function.vec4.s1, "feedback_calc" "feedback_calc" 4 23, 4 23 0, S_0000015c855f6020;
 .timescale 0 0;
; Variable feedback_calc is vec4 return value of scope S_0000015c855f6340
v0000015c85584500_0 .var "len", 3 0;
v0000015c855845a0_0 .var "polynome", 15 0;
v0000015c8558eed0_0 .var "reg_value", 15 0;
v0000015c8558ef70_0 .var "value", 0 0;
TD_tb.UUT.feedback_calc ;
    %load/vec4 v0000015c855845a0_0;
    %load/vec4 v0000015c85584500_0;
    %part/u 1;
    %cmpi/e 0, 0, 1;
    %jmp/0xz  T_0.0, 4;
    %vpi_call/w 4 27 "$error", "Incorrect polynome" {0 0 0};
T_0.0 ;
    %load/vec4 v0000015c8558eed0_0;
    %load/vec4 v0000015c85584500_0;
    %part/u 1;
    %store/vec4 v0000015c8558ef70_0, 0, 1;
    %fork t_1, S_0000015c855f64d0;
    %jmp t_0;
    .scope S_0000015c855f64d0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015c8557e890_0, 0, 32;
T_0.2 ;
    %load/vec4 v0000015c8557e890_0;
    %load/vec4 v0000015c85584500_0;
    %pad/u 32;
    %cmp/u;
    %jmp/0xz T_0.3, 5;
    %load/vec4 v0000015c855845a0_0;
    %load/vec4 v0000015c8557e890_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.4, 8;
    %load/vec4 v0000015c8558eed0_0;
    %load/vec4 v0000015c8557e890_0;
    %part/s 1;
    %load/vec4 v0000015c8558ef70_0;
    %xor;
    %store/vec4 v0000015c8558ef70_0, 0, 1;
T_0.4 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015c8557e890_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000015c8557e890_0, 0, 32;
    %jmp T_0.2;
T_0.3 ;
    %end;
    .scope S_0000015c855f6340;
t_0 %join;
    %load/vec4 v0000015c8558ef70_0;
    %ret/vec4 0, 0, 1;  Assign to feedback_calc (store_vec4_to_lval)
    %disable/flow S_0000015c855f6340;
    %end;
S_0000015c855f64d0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 30, 4 30 0, S_0000015c855f6340;
 .timescale 0 0;
v0000015c8557e890_0 .var/2s "i", 31 0;
    .scope S_0000015c855f6020;
T_1 ;
    %wait E_0000015c85579090;
    %load/vec4 v0000015c855f7150_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %load/vec4 v0000015c855f7290_0;
    %assign/vec4 v0000015c855f75b0_0, 0;
    %load/vec4 v0000015c855f71f0_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %pad/u 16;
    %assign/vec4 v0000015c855f70b0_0, 0;
    %load/vec4 v0000015c855f6840_0;
    %assign/vec4 v0000015c855f6bb0_0, 0;
T_1.0 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0000015c855f6020;
T_2 ;
Ewait_0 .event/or E_0000015c85579150, E_0x0;
    %wait Ewait_0;
    %load/vec4 v0000015c855f7150_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.0, 8;
    %load/vec4 v0000015c855f6f70_0;
    %pad/u 17;
    %store/vec4 v0000015c855f7790_0, 0, 17;
    %jmp T_2.1;
T_2.0 ;
    %load/vec4 v0000015c855f76f0_0;
    %pad/u 17;
    %store/vec4 v0000015c855f7790_0, 0, 17;
T_2.1 ;
    %load/vec4 v0000015c855f67a0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.2, 8;
    %fork t_3, S_0000015c855f61b0;
    %jmp t_2;
    .scope S_0000015c855f61b0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015c856dbdd0_0, 0, 32;
T_2.4 ;
    %load/vec4 v0000015c856dbdd0_0;
    %load/vec4 v0000015c855f75b0_0;
    %pad/u 32;
    %cmp/u;
    %flag_or 5, 4;
    %jmp/0xz T_2.5, 5;
    %load/vec4 v0000015c855f7790_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftl 4;
    %store/vec4 v0000015c855f7790_0, 0, 17;
    %load/vec4 v0000015c855f70b0_0;
    %load/vec4 v0000015c855f7790_0;
    %parti/s 16, 1, 2;
    %load/vec4 v0000015c855f6bb0_0;
    %store/vec4 v0000015c85584500_0, 0, 4;
    %store/vec4 v0000015c8558eed0_0, 0, 16;
    %store/vec4 v0000015c855845a0_0, 0, 16;
    %callf/vec4 TD_tb.UUT.feedback_calc, S_0000015c855f6340;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0000015c855f7790_0, 4, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015c856dbdd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000015c856dbdd0_0, 0, 32;
    %jmp T_2.4;
T_2.5 ;
    %end;
    .scope S_0000015c855f6020;
t_2 %join;
T_2.2 ;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_0000015c855f6020;
T_3 ;
    %wait E_0000015c85579090;
    %load/vec4 v0000015c855f67a0_0;
    %flag_set/vec4 8;
    %jmp/1 T_3.2, 8;
    %load/vec4 v0000015c855f7150_0;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_3.2;
    %jmp/0xz  T_3.0, 8;
    %load/vec4 v0000015c855f7790_0;
    %pad/u 16;
    %assign/vec4 v0000015c855f76f0_0, 0;
T_3.0 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0000015c8558ebb0;
T_4 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000015c855f7510_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000015c855f6b10_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000015c855f6a70_0, 0, 1;
    %pushi/vec4 1, 0, 16;
    %store/vec4 v0000015c855f7010_0, 0, 16;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0000015c855f73d0_0, 0, 4;
    %pushi/vec4 28677, 0, 17;
    %store/vec4 v0000015c855f7330_0, 0, 17;
    %pushi/vec4 13, 0, 4;
    %store/vec4 v0000015c855f6930_0, 0, 4;
    %end;
    .thread T_4, $init;
    .scope S_0000015c8558ebb0;
T_5 ;
T_5.0 ;
    %delay 5, 0;
    %load/vec4 v0000015c855f7510_0;
    %inv;
    %assign/vec4 v0000015c855f7510_0, 0;
    %jmp T_5.0;
    %end;
    .thread T_5;
    .scope S_0000015c8558ebb0;
T_6 ;
    %delay 100, 0;
    %fork t_5, S_0000015c8558ed40;
    %jmp t_4;
    .scope S_0000015c8558ed40;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015c856dbac0_0, 0, 32;
T_6.0 ;
    %load/vec4 v0000015c856dbac0_0;
    %cmpi/s 20, 0, 32;
    %jmp/0xz T_6.1, 5;
    %wait E_0000015c85579090;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000015c855f6a70_0, 0;
    %wait E_0000015c85579090;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000015c855f6a70_0, 0;
    %wait E_0000015c85579090;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000015c855f6a70_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000015c855f6b10_0, 0;
    %wait E_0000015c85579090;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000015c855f6a70_0, 0;
    %fork t_7, S_0000015c856d6550;
    %jmp t_6;
    .scope S_0000015c856d6550;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015c8557d140_0, 0, 32;
T_6.2 ;
    %load/vec4 v0000015c8557d140_0;
    %cmpi/s 80, 0, 32;
    %jmp/0xz T_6.3, 5;
    %wait E_0000015c85579090;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015c8557d140_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000015c8557d140_0, 0, 32;
    %jmp T_6.2;
T_6.3 ;
    %end;
    .scope S_0000015c8558ed40;
t_6 %join;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000015c855f6b10_0, 0;
    %delay 1, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015c855f73d0_0;
    %pushi/vec4 1, 0, 4;
    %add;
    %store/vec4 v0000015c855f73d0_0, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015c856dbac0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000015c856dbac0_0, 0, 32;
    %jmp T_6.0;
T_6.1 ;
    %end;
    .scope S_0000015c8558ebb0;
t_4 %join;
    %delay 0, 0;
    %vpi_call/w 3 42 "$display", ">>>>> SUCCESS" {0 0 0};
    %vpi_call/w 3 43 "$finish" {0 0 0};
    %end;
    .thread T_6;
    .scope S_0000015c8558ebb0;
T_7 ;
T_7.0 ;
    %wait E_0000015c85579090;
    %load/vec4 v0000015c855f6a70_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.1, 8;
    %load/vec4 v0000015c855f7010_0;
    %store/vec4 v0000015c855f7650_0, 0, 16;
T_7.1 ;
    %load/vec4 v0000015c855f6b10_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_7.5, 9;
    %load/vec4 v0000015c855f6a70_0;
    %inv;
    %and;
T_7.5;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.3, 8;
    %fork t_9, S_0000015c856d66e0;
    %jmp t_8;
    .scope S_0000015c856d66e0;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015c856d6b20_0, 0, 32;
T_7.6 ;
    %load/vec4 v0000015c856d6b20_0;
    %load/vec4 v0000015c855f73d0_0;
    %pad/u 32;
    %cmp/u;
    %flag_or 5, 4;
    %jmp/0xz T_7.7, 5;
    %load/vec4 v0000015c855f7650_0;
    %load/vec4 v0000015c855f6930_0;
    %part/u 1;
    %store/vec4 v0000015c855f6c50_0, 0, 1;
    %fork t_11, S_0000015c856d6870;
    %jmp t_10;
    .scope S_0000015c856d6870;
t_11 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0000015c856d6db0_0, 0, 32;
T_7.8 ;
    %load/vec4 v0000015c856d6db0_0;
    %load/vec4 v0000015c855f6930_0;
    %pad/u 32;
    %addi 1, 0, 32;
    %cmp/u;
    %jmp/0xz T_7.9, 5;
    %load/vec4 v0000015c855f7330_0;
    %load/vec4 v0000015c856d6db0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.10, 8;
    %load/vec4 v0000015c855f6c50_0;
    %load/vec4 v0000015c855f7650_0;
    %load/vec4 v0000015c856d6db0_0;
    %subi 1, 0, 32;
    %part/s 1;
    %xor;
    %store/vec4 v0000015c855f6c50_0, 0, 1;
T_7.10 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015c856d6db0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000015c856d6db0_0, 0, 32;
    %jmp T_7.8;
T_7.9 ;
    %end;
    .scope S_0000015c856d66e0;
t_10 %join;
    %load/vec4 v0000015c855f7650_0;
    %parti/s 15, 0, 2;
    %load/vec4 v0000015c855f6c50_0;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v0000015c855f7650_0, 0, 16;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015c856d6b20_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000015c856d6b20_0, 0, 32;
    %jmp T_7.6;
T_7.7 ;
    %end;
    .scope S_0000015c8558ebb0;
t_8 %join;
    %load/vec4 v0000015c855f7650_0;
    %load/vec4 v0000015c855f6e30_0;
    %cmp/ne;
    %jmp/0xz  T_7.12, 4;
    %vpi_call/w 3 63 "$display", "Error %h != %h", v0000015c855f7650_0, v0000015c855f6e30_0 {0 0 0};
    %vpi_call/w 3 64 "$display", ">>>>> FAIL" {0 0 0};
    %vpi_call/w 3 65 "$finish" {0 0 0};
T_7.12 ;
T_7.3 ;
    %jmp T_7.0;
    %end;
    .thread T_7;
    .scope S_0000015c8558ebb0;
T_8 ;
    %vpi_call/w 3 85 "$dumpfile", "qqq.vcd" {0 0 0};
    %vpi_call/w 3 86 "$dumpvars" {0 0 0};
    %end;
    .thread T_8;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "tb.sv";
    "./LFSR_Fibonacci.sv";
