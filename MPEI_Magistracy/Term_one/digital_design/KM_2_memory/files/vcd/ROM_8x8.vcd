$date
	Wed Oct 18 00:54:21 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ROM_8x8_tb $end
$var wire 8 ! DATA_O [7:0] $end
$var wire 8 " ADDR_O [7:0] $end
$var parameter 32 # ADDR_WIDTH $end
$var parameter 32 $ DATA_WIDTH $end
$var reg 8 % ADDR_I [7:0] $end
$var reg 1 & CLK_I $end
$var reg 1 ' RE_I $end
$scope module DUT $end
$var wire 8 ( ADDR_I [7:0] $end
$var wire 1 & CLK_I $end
$var wire 1 ' RE_I $end
$var parameter 32 ) ADDR_WIDTH $end
$var parameter 32 * DATA_WIDTH $end
$var reg 8 + ADDR_O [7:0] $end
$var reg 8 , DATA_O [7:0] $end
$var reg 8 - addr_reg [7:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 . i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 *
b1000 )
b1000 $
b1000 #
$end
#0
$dumpvars
b0 .
bx -
bx ,
bx +
b10010010 (
0'
0&
b10010010 %
bx "
bx !
$end
#10
1&
#20
0&
#30
1&
b1000000 %
b1000000 (
b1 .
#40
0&
#50
b1000000 -
1&
1'
#60
0&
b100 %
b100 (
b10 .
#70
b1000000 "
b1000000 +
b100011 !
b100011 ,
b100 -
1&
#80
0&
#90
b100 "
b100 +
b1000111 !
b1000111 ,
b110001 -
1&
b110001 %
b110001 (
b11 .
#100
0&
#110
b110001 "
b110001 +
b110100 !
b110100 ,
1&
#120
0&
b10000110 %
b10000110 (
b100 .
#130
b10000110 -
1&
#140
0&
#150
b10000110 "
b10000110 +
b11101 !
b11101 ,
b11000110 -
1&
b11000110 %
b11000110 (
b101 .
#160
0&
#170
b11000110 "
b11000110 +
b10100011 !
b10100011 ,
1&
#180
0&
b110010 %
b110010 (
b110 .
#190
b110010 -
1&
#200
0&
0'
#210
b110010 "
b110010 +
b11011111 !
b11011111 ,
1&
b1001 %
b1001 (
b111 .
#220
0&
#230
1&
#240
0&
b10000000 %
b10000000 (
b1000 .
#250
1&
#260
0&
#270
1&
b10000110 %
b10000110 (
b1001 .
#280
0&
#290
1&
#300
0&
b10111011 %
b10111011 (
b1010 .
1'
#310
b10111011 -
1&
#320
0&
#330
b10111011 "
b10111011 +
b1011111 !
b1011111 ,
b10011110 -
1&
b10011110 %
b10011110 (
b1011 .
#340
0&
#350
b10011110 "
b10011110 +
b1010110 !
b1010110 ,
1&
#360
0&
b11110110 %
b11110110 (
b1100 .
#370
b11110110 -
1&
#380
0&
#390
b11110110 "
b11110110 +
b10101100 !
b10101100 ,
b11000110 -
1&
b11000110 %
b11000110 (
b1101 .
#400
0&
#410
b11000110 "
b11000110 +
b10100011 !
b10100011 ,
1&
#420
0&
b11111100 %
b11111100 (
b1110 .
#430
b11111100 -
1&
#440
0&
#450
b11111100 "
b11111100 +
b101111 !
b101111 ,
b1100011 -
1&
b1100011 %
b1100011 (
b1111 .
#460
0&
#470
b1100011 "
b1100011 +
b11011101 !
b11011101 ,
1&
#480
0&
b1100010 %
b1100010 (
b10000 .
#490
b1100010 -
1&
#500
0&
