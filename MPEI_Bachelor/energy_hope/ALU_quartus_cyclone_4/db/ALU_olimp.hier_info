|top_module
CLK => CLK.IN2
res_btn => res_btn.IN2
KEY_A[0] => KEY_A[0].IN1
KEY_A[1] => KEY_A[1].IN1
KEY_B[0] => KEY_B[0].IN1
KEY_B[1] => KEY_B[1].IN1
select[0] => select[0].IN1
select[1] => select[1].IN1
select[2] => select[2].IN1
select[3] => select[3].IN1
LED1 << KEY_B[1].DB_MAX_OUTPUT_PORT_TYPE
LED2 << KEY_B[0].DB_MAX_OUTPUT_PORT_TYPE
LED3 << KEY_A[1].DB_MAX_OUTPUT_PORT_TYPE
LED4 << KEY_A[0].DB_MAX_OUTPUT_PORT_TYPE
DIG1 << seven_seg_disp:seven_seg_disp.anodes
DIG2 << seven_seg_disp:seven_seg_disp.anodes
DIG3 << seven_seg_disp:seven_seg_disp.anodes
DIG4 << seven_seg_disp:seven_seg_disp.anodes
SEG0 << seven_seg_disp:seven_seg_disp.segments
SEG1 << seven_seg_disp:seven_seg_disp.segments
SEG2 << seven_seg_disp:seven_seg_disp.segments
SEG3 << seven_seg_disp:seven_seg_disp.segments
SEG4 << seven_seg_disp:seven_seg_disp.segments
SEG5 << seven_seg_disp:seven_seg_disp.segments
SEG6 << seven_seg_disp:seven_seg_disp.segments


|top_module|clk_div:clk_div
clk_50MHz => cnt[0].CLK
clk_50MHz => cnt[1].CLK
clk_50MHz => cnt[2].CLK
clk_50MHz => cnt[3].CLK
clk_50MHz => cnt[4].CLK
clk_50MHz => cnt[5].CLK
clk_50MHz => cnt[6].CLK
clk_50MHz => cnt[7].CLK
clk_50MHz => cnt[8].CLK
clk_50MHz => cnt[9].CLK
clk_50MHz => cnt[10].CLK
clk_50MHz => cnt[11].CLK
clk2 <= cnt[11].DB_MAX_OUTPUT_PORT_TYPE


|top_module|seven_seg_disp:seven_seg_disp
clk => i[0].CLK
clk => i[1].CLK
data[0] => Mux0.IN3
data[1] => Mux0.IN2
data[2] => Mux0.IN1
data[3] => Mux0.IN0
anodes[0] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[1] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[2] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[3] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= seven_seg:seven_seg.segments
segments[1] <= seven_seg:seven_seg.segments
segments[2] <= seven_seg:seven_seg.segments
segments[3] <= seven_seg:seven_seg.segments
segments[4] <= seven_seg:seven_seg.segments
segments[5] <= seven_seg:seven_seg.segments
segments[6] <= seven_seg:seven_seg.segments
res => i.OUTPUTSELECT
res => i.OUTPUTSELECT


|top_module|seven_seg_disp:seven_seg_disp|seven_seg:seven_seg
data => Decoder0.IN0
segments[0] <= <GND>
segments[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= <VCC>
segments[5] <= <VCC>
segments[6] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


|top_module|ALU:ALU
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
res => out[0]~reg0.ACLR
res => out[1]~reg0.ACLR
res => out[2]~reg0.ACLR
res => out[3]~reg0.ACLR
A[0] => Add0.IN2
A[0] => Add1.IN4
A[0] => Mult0.IN1
A[0] => out.IN0
A[0] => out.IN0
A[0] => out.IN0
A[0] => Equal0.IN1
A[0] => LessThan0.IN2
A[0] => Mux2.IN14
A[0] => Add2.IN2
A[1] => Add0.IN1
A[1] => Add1.IN3
A[1] => Mult0.IN0
A[1] => out.IN0
A[1] => out.IN0
A[1] => out.IN0
A[1] => Equal0.IN0
A[1] => LessThan0.IN1
A[1] => Mux1.IN14
A[1] => Mux3.IN12
A[1] => Mux3.IN13
A[1] => Add2.IN1
B[0] => Add0.IN4
B[0] => Add2.IN4
B[0] => Mult0.IN3
B[0] => out.IN1
B[0] => out.IN1
B[0] => out.IN1
B[0] => Equal0.IN3
B[0] => LessThan0.IN4
B[0] => Mux2.IN15
B[0] => Add1.IN2
B[1] => Add0.IN3
B[1] => Add2.IN3
B[1] => Mult0.IN2
B[1] => out.IN1
B[1] => out.IN1
B[1] => out.IN1
B[1] => Equal0.IN2
B[1] => LessThan0.IN3
B[1] => Mux1.IN15
B[1] => Mux3.IN14
B[1] => Mux3.IN15
B[1] => Add1.IN1
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
select[0] => Mux0.IN19
select[0] => Mux1.IN19
select[0] => Mux2.IN19
select[0] => Mux3.IN19
select[1] => Mux0.IN18
select[1] => Mux1.IN18
select[1] => Mux2.IN18
select[1] => Mux3.IN18
select[2] => Mux0.IN17
select[2] => Mux1.IN17
select[2] => Mux2.IN17
select[2] => Mux3.IN17
select[3] => Mux0.IN16
select[3] => Mux1.IN16
select[3] => Mux2.IN16
select[3] => Mux3.IN16


